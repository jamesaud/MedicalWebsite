user                                    nginx;
worker_processes                        1;
error_log                               /proc/self/fd/2;
pid                                     /var/run/nginx.pid;

events {
    worker_connections                  1024;
    multi_accept                        on;
}

http {
    include                             /etc/nginx/mime.types;
    default_type                        application/octet-stream;
    fastcgi_buffers                     256 4k;
    fastcgi_intercept_errors            on;
    fastcgi_read_timeout                900;
    include                             fastcgi_params;
    access_log                          /proc/self/fd/2;
    port_in_redirect                    off;
    send_timeout                        600;
    sendfile                            on;
    client_body_timeout                 600;
    client_header_timeout               600;
    client_max_body_size                256M;
    keepalive_timeout                   60;
    keepalive_requests                  100;
    reset_timedout_connection           off;
    tcp_nodelay                         on;
    tcp_nopush                          on;
    server_tokens                       off;
    upload_progress uploads             1m;

    gzip                                on;
    gzip_buffers                        16 8k;
    gzip_comp_level                     2;
    gzip_http_version                   1.1;
    gzip_min_length                     10240;
    gzip_types                          text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf;
    gzip_vary                           on;
    gzip_proxied                        any;
    gzip_disable                        msie6;

    add_header                          X-XSS-Protection '1; mode=block';
    add_header                          X-Frame-Options SAMEORIGIN;
    add_header                          X-Content-Type-Options nosniff;

    map $http_x_forwarded_proto $fastcgi_https {
        default $https;
        http '';
        https on;
    }

    map $uri $no_slash_uri {
        ~^/(?<no_slash>.*)$ $no_slash;
    }


    # DJANGO CONFIGURATION

    upstream app {
        server django:5000;
    }

    upstream upstream {
        server UPSTREAM_NAME:9000;
    }

    #include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;


	server {
        server_name SERVER_NAME;
        listen 80;

        root /var/www/html/;
        index index.php;

        fastcgi_keep_conn on;
        fastcgi_index index.php;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        add_header Cache-Control "store, must-revalidate, post-check=0, pre-check=0";



        # Redirect /blog to wordpress
        location /blog {
            try_files $uri $uri/ /index.php?$args;
        }



        location ~ [^/]\.php(/|$) {
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                return 404;
            }

            include fastcgi.conf;
            fastcgi_index index.php;
            fastcgi_pass upstream;
            track_uploads uploads 60s;
        }



         # Otherwise, redirect everything else to Django
        location / {
                # checks for static file, if not found proxy to app
                try_files $uri @proxy_to_app;
            }



        # cookiecutter-django app
        location @proxy_to_app {
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_redirect off;
                proxy_pass   http://app;

            }




        location ~* ^/.well-known/ {
            allow all;
        }

        location = /favicon.ico {
            try_files $uri =204;
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location = /readme.html {
            return 404;
        }

        location ~* ^.*(\.(?:git|svn|htaccess|txt|pot?))$ {
            return 404;
        }

        location ~ /\. {
            deny all;
        }

        location ~* /(?:uploads|files)/.*\.php$ {
            deny all;
        }

        location ~* \.flv$ {
            flv;
        }

        location ~* .*\.(?:m4a|mp4|mov)$ {
            mp4;
            mp4_buffer_size     1M;
            mp4_max_buffer_size 5M;
        }

        location ~* ^.+\.(?:ogg|pdf|pptx?)$ {
            expires max;
            tcp_nodelay off;
        }


        # Add trailing slash to */wp-admin requests.
        rewrite /wp-admin$ $scheme://$host$uri/ permanent;

        # Directives to send expires headers and turn off 404 error logging.
        location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|woff2|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
            access_log off; log_not_found off; expires max;
        }




  }



}

